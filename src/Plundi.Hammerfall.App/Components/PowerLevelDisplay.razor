<div class="flex flex-col items-stretch p-4 bg-gray-900 rounded border shadow border-gray-950">
    <span class="text-center">Power Level</span>
    <span class="text-xs text-center text-gray-400">combination of hit points & attack power advantage</span>
    <div class="flex overflow-auto" tabindex="-1">
        <table class="gap-2 mt-4 text-xs text-center md:text-base grow">
            <thead class="focus:outline-2">
            <th class="p-1 text-sm text-nowrap">Your Level</th>
            @for (var level = 1; level <= 10; level++)
            {
                <th class="p-1 text-sm whitespace-nowrap text-nowrap">vs. L@(level)</th>
            }
            </thead>
            <tbody class="mt-2">
            @for (var yourLevel = 1; yourLevel <= 10; yourLevel++)
            {
                var yourHitPoints = CharacterStatsProvider.GetHitPoints(yourLevel);

                <tr class="@(yourLevel % 2 == 1 ? "bg-gray-950" : "")">
                    <td class="p-1 text-sm text-nowrap">Level @(yourLevel)</td>
                    @for (var targetLevel = 1; targetLevel <= 10; targetLevel++)
                    {
                        var targetHitPoints = Convert.ToDouble(CharacterStatsProvider.GetHitPoints(targetLevel));
                        var powerDif = Math.Pow(yourHitPoints / targetHitPoints, 2);

                        <td class="p-1 text-sm text-nowrap @(powerDif > 1 ? "text-green-500" : powerDif < 1 ? "text-red-500" : "")">
                            x@(Math.Round(powerDif, 2))<br/>
                        </td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>
