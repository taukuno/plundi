@page "/"

<main class="overflow-auto grow" tabindex="-1">
    <div class="flex flex-col gap-y-6 p-4 mx-auto lg:px-6 max-w-[1920px]">
        <div class="flex flex-col gap-2">
            <span class="text-lg">
                Configuration
            </span>
            <div class="grid gap-2 items-center md:gap-4 md:grid-cols-[auto,1fr]">
                <span class="text-sm">Your level</span>
                <div class="grid grid-cols-10 shadow">
                    @for (var i = 1; i <= 10; i++)
                    {
                        var playerLevel = i;
                        <button type="button"
                                class="@(_playerLevel == playerLevel ? "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600" : "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600") p-1 font-mono text-sm font-semibold bg-gradient-to-r border-l first:rounded-l last:rounded-r last:border-r focus:z-10 border-y border-gray-950 focus:outline focus:outline-2 focus:outline-offset-2"
                                @onclick="() => { _playerLevel = playerLevel; }">
                            @playerLevel
                        </button>
                    }
                </div>
                <span class="mt-2 text-sm md:mt-0">Set all rarities</span>
                <div class="grid grid-cols-4 shadow grow">
                    <button
                        class="py-1 px-2 text-sm font-semibold bg-gradient-to-r from-gray-900 to-gray-900 rounded-l border-l hover:from-gray-800 hover:to-gray-800 focus:z-10 border-y border-gray-950 truncate focus:outline focus:outline-2 focus:outline-offset-2 focus:outline-gray-600"
                        @onclick="() => SetAllAbilityRarities(AbilityRarity.Common)">
                        Common
                    </button>
                    <button
                        class="py-1 px-2 text-sm font-semibold text-emerald-400 bg-gradient-to-r from-gray-900 to-gray-900 border-l hover:from-gray-800 hover:to-gray-800 focus:z-10 border-y border-gray-950 truncate focus:outline focus:outline-2 focus:outline-offset-2 focus:outline-gray-600"
                        @onclick="() => SetAllAbilityRarities(AbilityRarity.Uncommon)">
                        Uncommon
                    </button>
                    <button
                        class="py-1 px-2 text-sm font-semibold bg-gradient-to-r from-gray-900 to-gray-900 border-l hover:from-gray-800 hover:to-gray-800 focus:z-10 text-sky-400 border-y border-gray-950 truncate focus:outline focus:outline-2 focus:outline-offset-2 focus:outline-gray-600"
                        @onclick="() => SetAllAbilityRarities(AbilityRarity.Rare)">
                        Rare
                    </button>
                    <button
                        class="py-1 px-2 text-sm font-semibold text-purple-400 bg-gradient-to-r from-gray-900 to-gray-900 rounded-r border hover:from-gray-800 hover:to-gray-800 focus:z-10 border-gray-950 truncate focus:outline focus:outline-2 focus:outline-offset-2 focus:outline-gray-600"
                        @onclick="() => SetAllAbilityRarities(AbilityRarity.Epic)">
                        Epic
                    </button>
                </div>
            </div>
        </div>
        <div class="flex flex-col gap-2 items stretch">
            <span class="text-lg">
                Player stats
            </span>
            @{
                var meleeDamage = Math.Round(PlayerStatsProvider.CalculateMeleeAttack(_playerLevel));
                var hitPoints = PlayerStatsProvider.GetHitPoints(_playerLevel);
                var attackPower = PlayerStatsProvider.GetAttackPower(_playerLevel);

                <div class="grid grid-cols-1 gap-2 sm:grid-cols-3">
                    <div class="flex flex-col gap-2 items-center p-4 bg-gradient-to-br from-gray-900 to-gray-900 rounded border shadow md:p-6 border-gray-950">
                        <div class="flex gap-2 items-baseline md:gap-4">
                            <i class="text-2xl text-white md:text-4xl fa-solid fa-hand"></i>
                            <span class="font-mono text-2xl md:text-4xl">@meleeDamage</span>
                        </div>
                        <span class="text-xs text-gray-500">melee damage</span>
                    </div>
                    <div class="flex flex-col gap-2 items-center p-4 bg-gradient-to-br from-gray-900 to-gray-900 rounded border shadow md:p-6 border-gray-950">
                        <div class="flex gap-2 items-baseline md:gap-4">
                            <i class="text-2xl text-red-500 md:text-4xl fa-solid fa-heart"></i>
                            <span class="font-mono text-2xl md:text-4xl">@hitPoints</span>
                        </div>
                        <span class="text-xs text-gray-500">hit points</span>
                    </div>
                    <div class="flex flex-col gap-2 items-center p-4 bg-gradient-to-br from-gray-900 to-gray-900 rounded border shadow md:p-6 border-gray-950">
                        <div class="flex gap-2 items-baseline md:gap-4">
                            <i class="text-2xl text-yellow-500 md:text-4xl fa-solid fa-bolt"></i>
                            <span class="font-mono text-2xl md:text-4xl">@attackPower</span>
                        </div>
                        <span class="text-xs text-gray-500">attack power</span>
                    </div>
                </div>
            }
        </div>
        <div class="flex flex-col gap-2 items-stretch">
            <div class="flex justify-between items-center">
                <span class="text-lg">
                    Offensive abilities
                </span>
                <div class="flex">
                    <button
                        class="@(_displayDamageAbilitiesInCompactView ? "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600 font-semibold" : "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600") py-1 px-2 text-xs bg-gradient-to-r rounded-l border-l focus:z-10 border-y border-gray-950 focus:outline focus:outline-2 focus:outline-offset-2"
                        @onclick="() => _displayDamageAbilitiesInCompactView = !_displayDamageAbilitiesInCompactView">
                        Compact
                    </button>
                    <button
                        class="@(_displayDamageAbilitiesInCompactView ? "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600" : "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600 font-semibold") py-1 px-2 text-xs bg-gradient-to-r rounded-r border focus:z-10 border-gray-950 focus:outline focus:outline-2 focus:outline-offset-2"
                        @onclick="() => _displayDamageAbilitiesInCompactView = !_displayDamageAbilitiesInCompactView">
                        Detailed
                    </button>
                </div>
            </div>
            <CascadingValue Value="_playerLevel" Name="PlayerLevel">
                <CascadingValue Value="_displayDamageAbilitiesInCompactView" Name="DisplayInCompactView">
                    <div class="grid gap-2 lg:grid-cols-2 @(_displayDamageAbilitiesInCompactView ? "2xl:grid-cols-3" : "")">
                        @foreach (var ability in _damageAbilities.Select((x, i) => (Value: x, Index: i + 1)))
                        {
                            <AbilityCard Ability="ability.Value"
                                         Position="ability.Index"
                                         OnMoveUpClicked="async _ => await MoveDamageAbilityAsync(ability.Value, MoveDirection.Up)"
                                         OnMoveDownClicked="async _ => await MoveDamageAbilityAsync(ability.Value, MoveDirection.Down)"/>
                        }
                    </div>
                </CascadingValue>
            </CascadingValue>
        </div>
        <div class="flex flex-col gap-2 items-stretch">
            <div class="flex justify-between items-center">
                <span class="text-lg">
                    Utility abilities
                </span>
                <div class="flex">
                    <div class="flex">
                        <button
                            class="@(_displayUtilityAbilitiesInCompactView ? "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600 font-semibold" : "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600") py-1 px-2 text-xs bg-gradient-to-r rounded-l border-l focus:z-10 border-y border-gray-950 focus:outline focus:outline-2 focus:outline-offset-2"
                            @onclick="() => _displayUtilityAbilitiesInCompactView = !_displayUtilityAbilitiesInCompactView">
                            Compact
                        </button>
                        <button
                            class="@(_displayUtilityAbilitiesInCompactView ? "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600" : "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600 font-semibold") py-1 px-2 text-xs bg-gradient-to-r rounded-r border focus:z-10 border-gray-950 focus:outline focus:outline-2 focus:outline-offset-2"
                            @onclick="() => _displayUtilityAbilitiesInCompactView = !_displayUtilityAbilitiesInCompactView">
                            Detailed
                        </button>
                    </div>
                </div>
            </div>
            <CascadingValue Value="_playerLevel" Name="PlayerLevel">
                <CascadingValue Value="_displayUtilityAbilitiesInCompactView" Name="DisplayInCompactView">
                    <div class="grid gap-2 lg:grid-cols-2 @(_displayUtilityAbilitiesInCompactView ? "2xl:grid-cols-3" : "")">
                        @foreach (var ability in _utilityAbilities.Select((x, i) => (Value: x, Index: i + 1)))
                        {
                            <AbilityCard Ability="ability.Value"
                                         Position="ability.Index"
                                         OnMoveUpClicked="async _ => await MoveUtilityAbilityAsync(ability.Value, MoveDirection.Up)"
                                         OnMoveDownClicked="async _ => await MoveUtilityAbilityAsync(ability.Value, MoveDirection.Down)"/>
                        }
                    </div>
                </CascadingValue>
            </CascadingValue>
        </div>
        <div class="flex flex-col gap-2 items-stretch">
            <div class="flex justify-between items-center">
                <span class="text-lg">
                    Melee abilities
                </span>
                <div class="flex">
                    <div class="flex">
                        <button
                            class="@(_displayMeleeAbilitiesInCompactView ? "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600 font-semibold" : "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600") py-1 px-2 text-xs bg-gradient-to-r rounded-l border-l focus:z-10 border-y border-gray-950 focus:outline focus:outline-2 focus:outline-offset-2"
                            @onclick="() => _displayMeleeAbilitiesInCompactView = !_displayMeleeAbilitiesInCompactView">
                            Compact
                        </button>
                        <button
                            class="@(_displayMeleeAbilitiesInCompactView ? "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600" : "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600 font-semibold") py-1 px-2 text-xs bg-gradient-to-r rounded-r border focus:z-10 border-gray-950 focus:outline focus:outline-2 focus:outline-offset-2"
                            @onclick="() => _displayMeleeAbilitiesInCompactView = !_displayMeleeAbilitiesInCompactView">
                            Detailed
                        </button>
                    </div>
                </div>
            </div>
            <CascadingValue Value="_playerLevel" Name="PlayerLevel">
                <CascadingValue Value="_displayMeleeAbilitiesInCompactView" Name="DisplayInCompactView">
                    <div class="grid gap-2 lg:grid-cols-2 @(_displayMeleeAbilitiesInCompactView ? "2xl:grid-cols-3" : "")">
                        @foreach (var ability in _meleeAbilities.Select((x, i) => (Value: x, Index: i + 1)))
                        {
                            <AbilityCard Ability="ability.Value"
                                         Position="ability.Index"
                                         OnMoveUpClicked="async _ => await MoveUtilityAbilityAsync(ability.Value, MoveDirection.Up)"
                                         OnMoveDownClicked="async _ => await MoveUtilityAbilityAsync(ability.Value, MoveDirection.Down)"/>
                        }
                    </div>
                </CascadingValue>
            </CascadingValue>
        </div>
    </div>
    <SiteInformationDisplay/>
</main>
