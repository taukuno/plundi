@page "/scaling"

<SelectAbilityModal @ref="_selectAbilityModal"
                    OnAbilitySelected="AddAbilityForComparisonAsync"/>

<main class="overflow-auto grow" tabindex="-1">
    <div class="flex flex-col gap-y-6 p-4 mx-auto max-w-screen-2xl lg:px-6">
        <div class="flex flex-col gap-2">
            <span class="text-lg">
                Configuration
            </span>
            <div class="grid gap-2 items-center md:gap-4 md:grid-cols-[auto,1fr]">
                <span class="text-sm">Your level</span>
                <div class="grid grid-cols-10 shadow">
                    @for (var i = 1; i <= 10; i++)
                    {
                        var playerLevel = i;
                        <button type="button"
                                class="@(_playerLevel == playerLevel ? "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600" : "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600") p-1 font-mono text-sm font-semibold bg-gradient-to-r border-l first:rounded-l last:rounded-r last:border-r focus:z-10 border-y border-gray-950 focus:outline focus:outline-2 focus:outline-offset-2"
                                @onclick="async () => { await SetPlayerLevelAsync(playerLevel); }">
                            @playerLevel
                        </button>
                    }
                </div>
                <span class="mt-2 text-sm md:mt-0">Target level</span>
                <div class="grid grid-cols-10 shadow">
                    @for (var i = 1; i <= 10; i++)
                    {
                        var targetLevel = i;
                        <button type="button"
                                class="@(_targetLevel == targetLevel ? "from-red-600 to-red-500 hover:from-red-500 hover:to-red-400 focus:outline-red-600" : "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600") p-1 font-mono text-sm font-semibold bg-gradient-to-r border-l first:rounded-l last:rounded-r last:border-r focus:z-10 border-y border-gray-950 focus:outline focus:outline-2 focus:outline-offset-2"
                                @onclick="async () => { await SetTargetLevelAsync(targetLevel); }">
                            @targetLevel
                        </button>
                    }
                </div>
                <span class="self-center mt-2 text-sm md:mt-0">Abilities to compare</span>
                <div class="flex flex-wrap gap-4 items-stretch p-2 bg-gray-900 rounded border shadow border-gray-950">
                    @foreach (var ability in _abilitiesToCompare)
                    {
                        <div class="w-14 h-14 bg-clip-border bg-cover rounded border shadow cursor-pointer border-gray-950"
                             style="background-image: url('img/abilities/@AbilityServiceProvider.GetAbilityDetailsProvider(ability).GetImagePath(ability)')">
                            <button class="p-2 w-full h-full text-xs text-center text-white bg-gray-900 rounded opacity-0 outline-white hover:opacity-50 focus:opacity-50 outline outline-1"
                                    @onclick="async () => await RemoveAbilityFromComparisonAsync(ability)">
                                <i class="fa-solid fa-x"></i>
                            </button>
                        </div>
                    }
                    <button class="p-2 w-14 h-14 text-center text-gray-400 rounded border-2 border-gray-400 border-dashed hover:bg-gray-800 focus:bg-gray-800 focus:outline-none"
                            @onclick="() => _selectAbilityModal?.Open(_abilitiesToCompare)">
                        <i class="fa-solid fa-plus"></i>
                    </button>
                </div>
                <span class="mt-2 text-sm md:mt-0">Line visualization</span>
                <div class="grid grid-cols-2 shadow grow">
                    <button
                        class="@(_smoothLines ? "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600" : "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600") py-1 px-2 text-sm font-semibold bg-gradient-to-r rounded-l border-l focus:z-10 border-y border-gray-950 truncate focus:outline focus:outline-2 focus:outline-offset-2"
                        @onclick="() => SetSmoothLinesAsync(false)">
                        Real
                    </button>
                    <button
                        class="@(_smoothLines ? "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600" : "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600") py-1 px-2 text-sm font-semibold bg-gradient-to-r from-gray-900 to-gray-900 rounded-r border hover:from-gray-800 hover:to-gray-800 focus:z-10 border-y border-gray-950 truncate focus:outline focus:outline-2 focus:outline-offset-2 focus:outline-gray-600"
                        @onclick="() => SetSmoothLinesAsync(true)">
                        Smooth
                    </button>
                </div>
                <span class="mt-2 text-sm md:mt-0">Base Time-to-Kill on</span>
                <div class="grid grid-cols-2 shadow grow">
                    <button
                        class="@(_baseTimeToKillOnDps ? "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600" : "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600") py-1 px-2 text-sm font-semibold bg-gradient-to-r rounded-l border-l focus:z-10 border-y border-gray-950 truncate focus:outline focus:outline-2 focus:outline-offset-2"
                        @onclick="async () => { await SetBaseTimeToKillOnDpsAsync(true); }">
                        DPS
                    </button>
                    <button
                        class="@(_baseTimeToKillOnDps ? "from-gray-900 to-gray-900 hover:from-gray-800 hover:to-gray-800 focus:outline-gray-600" : "from-violet-600 to-violet-500 hover:from-violet-500 hover:to-violet-400 focus:outline-violet-600") py-1 px-2 text-sm font-semibold bg-gradient-to-r from-gray-900 to-gray-900 rounded-r border hover:from-gray-800 hover:to-gray-800 focus:z-10 border-y border-gray-950 truncate focus:outline focus:outline-2 focus:outline-offset-2 focus:outline-gray-600"
                        @onclick="async () => { await SetBaseTimeToKillOnDpsAsync(false); }">
                        Simulation
                    </button>
                </div>
            </div>
        </div>
        <div class="flex flex-col gap-2 items stretch">
            <span class="text-lg">
                Player power
            </span>
            @{
                var playerPower = PlayerStatsProvider.CalculatePowerLevel(_playerLevel);
                var targetPower = PlayerStatsProvider.CalculatePowerLevel(_targetLevel);

                var powerDifference = PlayerStatsProvider.CalculatePowerDifference(_playerLevel, _targetLevel);

                <div class="grid grid-cols-1 gap-2 sm:grid-cols-3">
                    <div class="flex flex-col gap-2 items-center p-4 bg-gradient-to-br from-gray-900 to-gray-900 rounded border shadow md:p-6 border-gray-950">
                        <div class="flex gap-2 items-baseline md:gap-4">
                            <i class="text-2xl text-violet-400 md:text-4xl fa-solid fa-hand-fist"></i>
                            <span class="font-mono text-2xl md:text-4xl">@playerPower.ToString("N2")</span>
                        </div>
                        <span class="text-xs text-gray-500">your power level*</span>
                    </div>
                    <div class="flex flex-col gap-2 items-center p-4 bg-gradient-to-br from-gray-900 to-gray-900 rounded border shadow md:p-6 border-gray-950">
                        <div class="flex gap-2 items-baseline md:gap-4">
                            <i class="text-2xl md:text-4xl fa-solid fa-xmark @(powerDifference == 1 ? "" : powerDifference > 1 ? "text-green-400" : "text-red-400")"></i>
                            <span class="font-mono text-2xl md:text-4xl @(powerDifference == 1 ? "" : powerDifference > 1 ? "text-green-400" : "text-red-400")">@(powerDifference.ToString("N2"))</span>
                        </div>
                        <span class="text-xs text-gray-500">vs. your target</span>
                    </div>
                    <div class="flex flex-col gap-2 items-center p-4 bg-gradient-to-br from-gray-900 to-gray-900 rounded border shadow md:p-6 border-gray-950">
                        <div class="flex gap-2 items-baseline md:gap-4">
                            <i class="text-2xl text-yellow-400 md:text-4xl fa-solid fa-bullseye"></i>
                            <span class="font-mono text-2xl md:text-4xl">@targetPower.ToString("N2")</span>
                        </div>
                        <span class="text-xs text-gray-500">enemies power level*</span>
                    </div>
                    <span class="text-xs text-gray-500 sm:col-span-3 text-end">
                        *compared to a Level 1 player
                    </span>
                </div>}
        </div>
        <div class="flex flex-col gap-2 items-stretch">
            <span class="text-lg">
                Ability scaling
            </span>
            <div class="grid gap-2 lg:grid-cols-2">
                <AbilitiesDamageComparisonChart @ref="_abilitiesDamageComparisonChart"
                                                PlayerLevel="_playerLevel"
                                                Abilities="_abilitiesToCompare"
                                                SmoothLines="_smoothLines"/>
                <AbilitiesDpsComparisonChart @ref="_abilitiesDpsComparisonChart"
                                             PlayerLevel="_playerLevel"
                                             Abilities="_abilitiesToCompare"
                                             SmoothLines="_smoothLines"/>
                <AbilitiesCooldownComparisonChart @ref="_abilitiesCooldownComparisonChart"
                                                  PlayerLevel="_playerLevel"
                                                  Abilities="_abilitiesToCompare"/>
                <AbilitiesTimeToKillComparisonChart @ref="_abilitiesTimeToKillComparisonChart"
                                                    PlayerLevel="_playerLevel"
                                                    TargetLevel="_targetLevel"
                                                    BaseTimeToKillOnDps="_baseTimeToKillOnDps"
                                                    Abilities="_abilitiesToCompare"
                                                    SmoothLines="_smoothLines"/>
            </div>
        </div>
        <div class="flex flex-col gap-2 items-stretch">
            <span class="text-lg">
                Player scaling
            </span>
            <PlayerStatsChart @ref="_playerStatsChart"
                                 SmoothLines="_smoothLines"/>
            <PowerLevelDisplay PlayerLevel="_playerLevel"
                               TargetLevel="_targetLevel"/>
        </div>
    </div>
    <SiteInformationDisplay/>
</main>
